/*
7-5 校庆 （25 分）
2019 年浙江大学将要庆祝成立 122 周年。为了准备校庆，校友会收集了所有校友的身份证号。现在需要请你编写程序，根据来参加校庆的所有人士的身份证号，统计来了多少校友。

输入格式：
输入在第一行给出不超过 10
​5
​​  的正整数 N，随后 N 行，每行给出一位校友的身份证号（18 位由数字和大写字母X组成的字符串）。题目保证身份证号不重复。

随后给出前来参加校庆的所有人士的信息：首先是一个不超过 10
​5
​​  的正整数 M，随后 M 行，每行给出一位人士的身份证号。题目保证身份证号不重复。

输出格式：
首先在第一行输出参加校庆的校友的人数。然后在第二行输出最年长的校友的身份证号 —— 注意身份证第 7-14 位给出的是 yyyymmdd 格式的生日。如果没有校友来，则在第二行输出最年长的来宾的身份证号。题目保证这样的校友或来宾必是唯一的。

输入样例：
5
372928196906118710
610481197806202213
440684198612150417
13072819571002001X
150702193604190912
6
530125197901260019
150702193604190912
220221196701020034
610481197806202213
440684198612150417
370205198709275042
输出样例：
3
150702193604190912

分数	通过数	提交数	通过率
25	117	2480	0.05

做题手记：这道题没用set存校友名录会超时。那个最年长的，就是来宾中的最年长，并不需要针对题目说的那样有两种情况编写（感觉是测试点没有很好覆盖某些情况的缘故）。
*/
#include<iostream>
#include<cstdio>
#include<vector>
#include<string>
#include<set>
using namespace std;
int main(){
	int n,m,cnt=0;
	cin>>n;
	getchar();
	string s,old="20190302",ans;
	//vector<string> v1,v2;
	set<string> st;
	for(int i=0;i<n;i++){
		getline(cin,s);
		//cout<<s<<endl;
		//v1.push_back(s);
		st.insert(s);
	}
	cin>>m;
	getchar();
	for(int i=0;i<m;i++){
		getline(cin,s);
		//cout<<s;
		//cout<<s<<endl;
		//v2.push_back(s);
		set<string>::iterator it;
		if(st.find(s)!=st.end()){
            cnt++;
		}
		if(s.substr(6,8)<old){
				old=s.substr(6,8);
				ans=s;
		}
	}
	cout<<cnt<<endl;
	cout<<ans;
	return 0;
}
